import random
import turtle

success = 0
cyrillic_letters = ''.join(map(chr,range(ord('а'),ord('я')+1))) + 'ё'
list_of_used_words = []

def get_list_of_words(path):         # функция создания списка слов из текстового файла
    with open(path,'r',encoding='utf-8') as f:
        return f.read().splitlines() 

def get_word():                      # функция генерации слова
    words = get_list_of_words(r'C:\Users\polle\Documents\Python\Виселица интерактив\слова.txt')
    words = [word.lower() for word in words]
    word = random.choice(words)
    while word in list_of_used_words:
        word = random.choice(words)
    list_of_used_words.append(word)
    return word

def check_letter(letter,word):       # функция проверки наличия введенной буквы в слове
    if letter in word:
        return True
    else:
        return False
    
def hangman(number):                 # фукнция вывода рисунка виселицы
    match number:
        case 1:
            pen_pic.speed(0)
            pen_pic.setpos(0,0)
            pen_pic.pendown()            
            pen_pic.right(90)
            pen_pic.forward(100)
            breakpoint
        case 2:
            pen_pic.left(90)
            pen_pic.forward(30)
            pen_pic.backward(60)
            pen_pic.forward(30)
            pen_pic.penup()
            breakpoint
        case 3:
            pen_pic.setpos(0,0)
            pen_pic.pendown()
            pen_pic.setheading(0)
            pen_pic.forward(60)
            breakpoint
        case 4:
            pen_pic.right(90)
            pen_pic.forward(10)
            breakpoint
        case 5:
            pen_pic.right(90)
            pen_pic.circle(10)
            pen_pic.penup()
            pen_pic.left(90)
            pen_pic.forward(20)
            breakpoint
        case 6:
            pen_pic.pendown()
            pen_pic.forward(30)
            pen_pic.backward(30)
            breakpoint
        case 7:
            pen_pic.left(45)
            pen_pic.forward(20)
            pen_pic.backward(20)
            breakpoint
        case 8:
            pen_pic.right(90)
            pen_pic.forward(20)
            pen_pic.backward(20)
            pen_pic.penup()
            breakpoint
        case 9:
            pen_pic.setpos(60,-60)
            pen_pic.pendown()
            pen_pic.setheading(-45)
            pen_pic.forward(20)
            pen_pic.backward(20)
            breakpoint
        case 10:
            pen_pic.right(90)
            pen_pic.forward(20)
            print()
            print('Вы проиграли. Загаданное слово',end=' ')
            breakpoint
        
def replacement(letter,user_word,word):     # функция замены символа "_" на букву
    for i in range(len(word)):
        if word[i] == letter:
            user_word = user_word[:i] + letter + user_word[i + 1:]
    return user_word

def start_game():                    # основная функция с игрой
    global success
    letter_pos = [-100,50]
    word = get_word()
    let_list = []                    # список уже опробованных букв
    user_word = '_' * len(word)          # создание слова для вывода на экран с символом "_" вместо букв
    num = 1                          # номер нужного этапа зарисовки виселицы
    print('Слово загадано:',end=' ')
    for _ in range(len(word)):
        print('_', end=' ')
    print()
    pen_letters.setpos(0,150)
    pen_letters.write('Попробуй угадать слово',align='center',font=('Arial',20,'normal'))
    pen_word.setpos(30,-150)
    pen_word.write(' '.join(list(user_word)),font=('Arial',18,'normal'))
    while user_word != word and num <= 10:
        print()
        attemp = input('Введите букву: ').lower() # ввод буквы
        while attemp not in cyrillic_letters or attemp.isdigit():
            print()
            attemp = input('Введите букву: ').lower()
        if attemp == 'ё':
            print()
            print('Для удобства буква ё заменена на е')
            let_list.append(attemp)
            attemp = 'е'
        while attemp in let_list:                # проверка введенной буквы на дублирование
            print()
            print('Вы уже вводили эту букву! Попробуйте еще раз: ')
            attemp = input().lower()
        if attemp == 'ё':
            print()
            print('Для удобства буква ё заменена на е')
            attemp = 'е'
        let_list.append(attemp)                  # добавление буквы в список уже введенных
        pen_letters.setpos(tuple(letter_pos))
        if check_letter(attemp,word):
            user_word = replacement(attemp,user_word,word)
            print()
            print('Вы угадали букву!', user_word)
            pen_letters.write(attemp,'right',font=('Arial',15,'normal'))
            pen_word.setpos(30,-150)
            pen_word.clear()
            pen_word.write(' '.join(list(user_word)),'right',font=('Arial',18,'normal'))
        else:
            print()
            print('В слове нет такой буквы')
            pen_letters.write(attemp,'right',font=('Arial',15,'overstrike'))
            hangman(num)
            num += 1
        letter_pos[0] += 15
    if word == user_word:
        print()
        print('Поздравляю! Вы угадали слово!')
        print()
        pen_word.clear()
        pen_word.setpos(0,-150)
        turtle.Screen().bgcolor('PaleGreen')
        pen_word.write('Вы угадали слово!!!!  ',align='right',font=('Arial',18,'normal'))
        pen_word.write(word.upper(),font=('Arial',18,'normal'))
        success += 1
    else:
        turtle.Screen().bgcolor('black')
        pen_word.clear()
        pen_word.pencolor('white')
        pen_word.setpos(0,-150)
        pen_word.write('Вы не угадали слово...  ',align='right',font=('Arial',18,'normal'))
        pen_word.write(word.upper(),font=('Arial',18,'normal'))
        print(word)
        print()


        # основная часть программы
print('Привет! Давай играть в угадайку слов!')
print()
played = 0
while input('Вы хотите играть в виселицу? ').lower() == 'да':
    played += 1
    turtle.Screen().clear()
    turtle.Screen().bgcolor('PaleGoldenrod')
    pen_pic = turtle.Turtle()
    pen_word = turtle.Turtle()
    pen_letters = turtle.Turtle()
    pen_pic.hideturtle()
    pen_word.hideturtle()
    pen_word.penup()
    pen_letters.hideturtle()
    pen_letters.penup()
    start_game()
print('\nУспешно сыграно: ',(success*100)//played,'%',sep='')
print('\t',success,'игр(ы) из',played)
